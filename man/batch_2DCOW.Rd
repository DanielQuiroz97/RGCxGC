% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batchTwoDCOW.R
\name{batch_2DCOW}
\alias{batch_2DCOW}
\title{Two-dimensional COW in batch.}
\usage{
batch_2DCOW(reference, sample_chroms, segments, max_warp)
}
\arguments{
\item{reference}{a GCxGC chromatogram wich will be taken as the reference 
chromatogram}

\item{sample_chroms}{a named list with the sample chromatograms which will
be aligned against to the reference chromatogram}

\item{segments}{A two integer vector with number of segments
which the first and second dimension will be subdivided, respectively.}

\item{max_warp}{A two intger vector with the maximum warping parameter.}
}
\description{
`batch_2DCOW` returns the aligned chromatogram in a named list slot.
The first chromatogram is considered as the reference.
}
\details{
First you have to select a representative chromatogram to be considered as
the reference. Then, chromatograms to align has to be sabed in a single
obects as a named list. The list names will be considered as the names
of each chromatograms and the object name will be omitted.

This is an adaptation of two-dimesional COW alignment, implementated first
in MATLAB. This function takes a set of samples chromatogram to be aligned 
against to the reference. The argument [segment] will be used 
to split the whole chromatogram in n parts in the first and the 
second dimension respectevily. The [max_warp] argument provides de maximum
tolerace of the signal transformation as well to the first and the
second dimension.
}
\examples{

# Read Sample chromatogram
GB08_fl <- system.file("extdata", "08GB.cdf", package = "RGCxGC")
MTBLS08 <- read_chrom(GB08_fl, mod_time = 5)

# Read reference chromatogram
GB09_fl <- system.file("extdata", "09GB.cdf", package = "RGCxGC")
MTBLS09 <- read_chrom(GB09_fl, mod_time = 5)

# Create a named list
# MTBLS08 will be repeated for exemplification
# Considerer that chromatograms are renamed considering the list names
batch_samples <- list(Chrom1 = MTBLS08, Chrom2 = MTBLS08)

\donttest{
# Perform batch 2DCOW alignment
batch_alignment <- batch_2DCOW(MTBLS09, batch_samples, c(10, 40), c(1, 10))
}

}
