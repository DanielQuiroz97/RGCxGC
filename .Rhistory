function(x, check, D1, D2){
filled_ld <- sapply(mt,
function(y, ch)
ifelse(all(y != check),
y, 0), check)
mloading <- matrix(filled_ld, nrow = D1,
ncol = D2, byrow = T)
mloading
}, col_0var, D1, D2)
lapply(loadings, mean)
mloading <- lapply(loadings,
function(x, check, D1, D2){
filled_ld <- sapply(x,
function(y, ch)
ifelse(all(y != check),
y, 0), check)
mloading <- matrix(filled_ld, nrow = D1,
ncol = D2, byrow = T)
mloading
}, col_0var, D1, D2)
x
filled.contour(mloading[[1]], nlevels = 5)
save(KD1_1, KD1_2, "tmp.RData")
save(KD1_1, KD1_2, file = "tmp.RData")
rm(KD1_1, KD1_2,)
load("~/Dropbox/RGCxGC/tmp.RData")
devtools::load_all(".")
# KD1
modulation <- 6L
sampRT <- 25
KD1_1 <- read_GCxGC('data/KD1_1.CDF', modulation, sampRT)
KD1_2 <- read_GCxGC('data/KD1_2.CDF', modulation, sampRT)
KD1_3 <- read_GCxGC('data/KD1_3.CDF', modulation, sampRT)
# Multiway Principal compoenent analysis
metadata <- data.frame(Names = c("A14_1", "A14_2", "A14_3",
"KD1_1", "KD1_2", "KD1_3"),
Groups = c(rep("Control", 3),
rep("Treatment 1", 3)),
stringsAsFactors = F)
joined <- join_chromatograms(KD1_1, KD1_2,KD1_3 = KD1_3, batch_aligned,
groups = metadata)
batch_aligned <-  batch_2DCOW(batch_names, 6L, c(20, 10), c(10, 6))
batch_names <- list.files(path = 'data', pattern = 'A14*',full.names = T)
batch_aligned <-  batch_2DCOW(batch_names, 6L, c(20, 10), c(10, 6))
joined <- join_chromatograms(KD1_1, KD1_2,KD1_3 = KD1_3, batch_aligned,
groups = metadata)
chrom_dim <- t(sapply(joined@chromatograms, dim))
D1  <- unique(chrom_dim[, 1])
D2 <- unique(chrom_dim[, 2])
raw_signal <- sapply(joined@chromatograms,
function(x) as.vector(t(x)) )
raw_signal <-  t(raw_signal)
col_0var <- apply(raw_signal, 2, var) != 0
raw_signal <- raw_signal[, col_0var]
pca <- prcomp(raw_signal, center = T, scale. = T, ...)
pca <- prcomp(raw_signal, center = T, scale. = T)
sum_pca <- list(summary = summary(pca))
loadings <-  lapply(seq(npcs), function(i) pca$rotation[, i])
npcs = 3
loadings <-  lapply(seq(npcs), function(i) pca$rotation[, i])
x <- loadings[[1]]
filled_ld <- sapply(x,
function(y, ch){
chech <- which(!ch)
ifelse(all(y != check),
y, 0)
}, check)
filled_ld <- sapply(x,
function(y, ch){
chech <- which(!ch)
ifelse(all(y != check),
y, 0)
}, col_0var)
filled_ld <- sapply(x,
function(y, ch){
check <- which(!ch)
ifelse(all(y != check),
y, 0)
}, col_0var)
tmp <- vector(length = D1 * D2, "numeric")
tmp <- seq(D1 * D2)
al <- environment()
al$iteration <- i
al$iteration <-
1
al$iteration
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
warning()
warnings()
devtools::load_all(".")
mpca_gcgc <- MPCA(joined)
mpca_gcgc@scores
c("A" = 5)
devtools::load_all(".")
mpca_gcgc <- MPCA(joined)
devtools::load_all(".")
mpca_gcgc <- MPCA(joined)
devtools::load_all(".")
mpca_gcgc <- MPCA(joined)
devtools::load_all(".")
mpca_gcgc <- MPCA(joined)
mpca_gcgc@groups
joined@groups
tmp <- matrix(1:5)
tmp
devtools::load_all(".")
mpca_gcgc <- MPCA(joined)
mpca_gcgc@groups
str(mpca_gcgc@groups)
devtools::load_all(".")
load("~/Dropbox/RGCxGC/MPCA.RData")
tmp <- MPCA(joined)
devtools::load_all(".")
devtools::load_all(".")
tmp <- MPCA(joined)
tmp@scores
tmp2 <- tmp@scores
tmp2 <- as.data.frame(tmp@scores)
tmp2
plot(tmp2$PC1, tmp2$PC2)
plot(x = tmp2$PC1, y = tmp2$PC2)
devtools::load_all(".")
length(1)
length(0)
devtools::load_all(".")
load("~/Dropbox/RGCxGC/MPCA.RData")
mpca <- MPCA(joined)
plot_mpca(mpca)
devtools::load_all(".")
plot_mpca(mpca)
devtools::load_all(".")
plot_mpca(mpca)
load_it
loading
Object@loadings$lds[[pc]]
Object@loadings$lds
devtools::load_all(".")
devtools::load_all(".")
plot_mpca(mpca)
devtools::load_all(".")
plot_mpca(mpca)
devtools::load_all(".")
plot_mpca(mpca)
devtools::load_all(".")
devtools::load_all(".")
plot_mpca(mpca)
devtools::load_all(".")
system.time(plot_mpca(mpca))
plot_mpca(mpca)
plot_mpca(mpca)
devtools::load_all(".")
plot_mpca(mpca)
plot_mpca(mpca, nlevels = 80)
plot_mpca(mpca, nlevels = 80, col_levels = 70)
plot_mpca(mpca, nlevels = 80, col_levels = 40)
plot_mpca(mpca, nlevels = 80, col_levels = 10)
plot_mpca(mpca, nlevels = 80, col_levels = 160)
tmp <- 1:15
tmp[tmp > 7] <- 0
tmp
devtools::load_all(".")
plot_mpca(mpca, nlevels = 80, col_levels = 160)
plot_mpca(mpca, nlevels = 80, col_levels = 10)
plot_mpca(mpca, nlevels = 100, col_levels = 200)
plot_mpca(mpca, nlevels = 100, col_levels = 100)
plot_mpca(mpca, nlevels = 10, col_levels = 10)
devtools::document()
devtools::load_all(".")
tmp <- read_GCxGC('data/08GB.cdf', 5L)
filled.contour(tmp@chromatogram, color.palette = colorRamps::matlab.like2, nlevels = 200 )
filled.contour(t(tmp@chromatogram), color.palette = colorRamps::matlab.like2, nlevels = 100 )
filled.contour(t(tmp@chromatogram), color.palette = colorRamps::matlab.like2, nlevels = 200 )
tmp2 <- matrix(1:50, nrow = 5)
filled.contour(tmp2)
tmp2
axis(1, at = seq(1, 10, by = 2), labels = LETTERS[1:5])
tmp2
filled.contour(tmp2)
axis(1, at = seq(0, 1, length.out = 5), labels = LETTERS[1:5])
filled.contour(tmp2, axes = F)
filled.contour(tmp2, axes = F, frame.plot = T)
axis(1, at = seq(0, 1, length.out = 5), labels = LETTERS[1:5])
seq(0, 1, length.out = 5)
tmp2 <- matrix(1:50, nrow = 5)
filled.contour(tmp2, axes = F, frame.plot = T,
plot.axes = {
axis(1, at = seq(0, 1, length.out = 5),
labels = LETTERS[1:5])
})
dim(tmp2)
dim(tmp2)[1]
dim(tmp2)[2]
filled.contour(tmp@chromatogram, axes = F, frame.plot = T,
plot.axes = {
axis(1, at = seq(0, 1, length.out = 5),
labels = seq(7, 66, length.out = 5))
})
devtools::load_all(".")
tmp <- read_GCxGC("data/08GB.cdf", 5L)
devtools::load_all(".")
tmp <- read_GCxGC("data/08GB.cdf", 5L)
devtools::load_all(".")
devtools::load_all(".")
tmp <- read_GCxGC("data/08GB.cdf", 5L)
devtools::load_all(".")
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200 )
devtools::load_all(".")
plot(tmp)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200 )
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200 )
plot(tmp, color.palette = colorRamps::matlab.like, nlevels = 200 )
plot(tmp, color.palette = colorRamps::matlab.like, nlevels = 400 )
?filled.contour
plot(tmp, color.palette = colorRamps::matlab.like, nlevels = 200, key.title = "TIC")
devtools::load_all(".")
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200,
border = NA)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200,
col = NA)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200,
col = NULL)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200,
col = NULL)
par(fg = NA)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200)
devtools::load_all(".")
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200)
par(fg = NA)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200)
devtools::load_all(".")
#par(fg = NA)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200,
frame.plot = T)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200,
frame.plot = T)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200,
frame.plot = T)
par(fg = NA)
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200,
frame.plot = T)
dev.off()
par(fg = NA, col = "black")
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200,
frame.plot = T)
devtools::load_all(".")
#tmp <- read_GCxGC("data/08GB.cdf", 5L)
#par(fg = NA, col = "black")
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200)
tmp <- read_GCxGC("data/08GB.cdf", 5L)
#par(fg = NA, col = "black")
plot(tmp, color.palette = colorRamps::matlab.like2, nlevels = 200)
MTBLS579 <- read_GCxGC(name = "../data/08GB.cdf", mod_time = 5L)
MTBLS579 <- read_GCxGC(name = "../data/08GB.cdf", mod_time = 5L)
slot(MTBLS579)
MTBLS579 <- read_GCxGC(name = "../data/08GB.cdf", mod_time = 5L)
slots(MTBLS579)
MTBLS579 <- read_GCxGC(name = "../data/08GB.cdf", mod_time = 5L)
getSlots(MTBLS579)
devtools::load_all(".")
MTBLS579 <- read_GCxGC(name = "../data/08GB.cdf", mod_time = 5L)
getSlots(MTBLS579)
MTBLS579 <- read_GCxGC(name = "../data/08GB.cdf", mod_time = 5L)
MTBLS579 <- read_GCxGC(name = "../data/08GB.cdf", mod_time = 5L)
MTBLS579
getSlots(MTBLS579)
slotNames(MTBLS579)
MTBLS579 <- read_GCxGC(name = "../data/08GB.cdf", mod_time = 5L)
slotNames(MTBLS579)
devtools::load_all("../")
devtools::load_all("../")
plot(MTBLS579)
par( mfrow = c(1, 2))
# Defoult plot
plot(MTBLS579)
# nlevels: Number of levels
# color.palette: The color palette to employ
plot(MTBLS579, nlevels = 200, color.palette = colorRamps::matlab.like)
dev.off()
par( mfrow = c(1, 2))
# Defoult plot
plot(MTBLS579)
# nlevels: Number of levels
# color.palette: The color palette to employ
plot(MTBLS579, nlevels = 200, color.palette = colorRamps::matlab.like)
# nlevels: Number of levels
# color.palette: The color palette to employ
plot(MTBLS579, nlevels = 200, color.palette = colorRamps::matlab.like)
?ptw::whit1
?baselineCorr_GCxGC
?baseline.corr
MTBLS579_bc <- baselineCorr_GCxGC(MTBLS579)
MTBLS579_bc <- baselineCorr_GCxGC(MTBLS579, dim = 1)
devtools::load_all(".")
devtools::load_all(".")
tmp <- base_baselineCorr(MTBLS579)
tmp <- baselineCorr_GCxGC(MTBLS579)
devtools::load_all(".")
tmp <- baselineCorr_GCxGC(MTBLS579)
MTBLS579@name
setwd("~/Dropbox/RGCxGC/R")
tmp <- baselineCorr_GCxGC(MTBLS579)
devtools::load_all("~/Dropbox/RGCxGC")
tmp <- baselineCorr_GCxGC(MTBLS579)
plot(tmp, nlevels = 200, color.palette = colorRamps::matlab.like)
devtools::load_all("~/Dropbox/RGCxGC")
tmp <- baselineCorr_GCxGC(MTBLS579)
devtools::load_all("~/Dropbox/RGCxGC")
tmp <- baselineCorr_GCxGC(MTBLS579)
plot(tmp, nlevels = 200, color.palette = colorRamps::matlab.like)
devtools::load_all("~/Dropbox/RGCxGC")
tmp <- baselineCorr_GCxGC(MTBLS579)
MTBLS579_bc <- baselineCorr_GCxGC(MTBLS579, dim = 1)
devtools::load_all("../")
MTBLS579_bc <- baselineCorr_GCxGC(MTBLS579, dim = 1)
MTBLS579_bc <- baselineCorr_GCxGC(MTBLS579)
plot(MTBLS579_bc, nlevels = 200, color.palette = colorRamps::matlab.like)
?baseline.corr
MTBLS579_bc <- baselineCorr_GCxGC(MTBLS579)
plot(MTBLS579_bc, nlevels = 200, color.palette = colorRamps::matlab.like)
MTBLS579_bc <- baselineCorr_GCxGC(MTBLS579)
plot(MTBLS579_bc, nlevels = 200, color.palette = colorRamps::matlab.like)
# tengo el dataframe :
A = data.frame(c(2,5,4,7,5), c(325,3145,543,1234,2345))
# y el vector :
b = c(3145, 1234)
A[, A[, 2] == b]
A[, 2] == b
sapply(b, identical, A[, 2])
sapply(A[, 2], identical, b)
sapply(A[, 2], function(x, b) any(identical(x, b)), b)
sapply(A[, 2], function(x, b) any(x == b), b)
index <- sapply(A[, 2], function(x, b) any(x == b), b)
A[, index]
A[index, ]
setwd("~/Dropbox/RGCxGC")
devtools::load_all(".")
mod_time <<- 5L
GB08 <- read_GCxGC('data/08GB.cdf')
md_time <- 5L
##### Reading all chromatograms #####
# Control Group
GB08 <- read_GCxGC('data/08GB.cdf', md_time)
GB09 <- read_GCxGC('data/09GB.cdf', md_time)
GB14 <- read_GCxGC('data/14GB.cdf', md_time)
# T. carrage
GB24 <- read_GCxGC('data/24GB.cdf', md_time)
GB29 <- read_GCxGC('data/29GB.cdf', md_time)
GB34 <- read_GCxGC('data/34GB.cdf', md_time)
#### Preprocessing step ####
# baseline correction
GB08_bc <- baselineCorr_GCxGC(GB08)
md_time <- 5L
##### Reading all chromatograms #####
# Control Group
GB08 <- read_GCxGC('data/08GB.cdf', md_time)
bidim_chrom <- list(chromatogram = matrix(tic, nrow = len_1d,
ncol = len_2d),
time = time_rn)
GB09 <- read_GCxGC('data/09GB.cdf', md_time)
GB14 <- read_GCxGC('data/14GB.cdf', md_time)
# T. carriage
GB24 <- read_GCxGC('data/24GB.cdf', md_time)
GB29 <- read_GCxGC('data/29GB.cdf', md_time)
GB34 <- read_GCxGC('data/34GB.cdf', md_time)
#### Preprocessing step ####
## baseline correction
# Control
GB08_bc <- baselineCorr_GCxGC(GB08)
GB09_bc <- baselineCorr_GCxGC(GB09)
GB14_bc <- baselineCorr_GCxGC(GB14)
# T. carriage
GB24_bc <- baselineCorr_GCxGC(GB24)
GB34_bc <- baselineCorr_GCxGC(GB34)
GB29_bc <- baselineCorr_GCxGC(GB29)
md_time <- 5L
##### Reading all chromatograms #####
# Control Group
GB08 <- read_GCxGC('data/08GB.cdf', md_time)
GB09 <- read_GCxGC('data/09GB.cdf', md_time)
GB14 <- read_GCxGC('data/14GB.cdf', md_time)
# T. carriage
GB24 <- read_GCxGC('data/24GB.cdf', md_time)
GB29 <- read_GCxGC('data/29GB.cdf', md_time)
GB34 <- read_GCxGC('data/34GB.cdf', md_time)
#### Preprocessing step ####
## baseline correction
# Control
GB08_bc <- baselineCorr_GCxGC(GB08)
GB09_bc <- baselineCorr_GCxGC(GB09)
GB14_bc <- baselineCorr_GCxGC(GB14)
# T. carriage
GB24_bc <- baselineCorr_GCxGC(GB24)
GB34_bc <- baselineCorr_GCxGC(GB34)
GB29_bc <- baselineCorr_GCxGC(GB29)
## Smoothing
# Control
GB08_sm <- smooth_GCxGC(GB08_bc, penalty = 2, lambda = 1e1)
GB09_sm <- smooth_GCxGC(GB09_bc, penalty = 2, lambda = 1e1)
GB14_sm <- smooth_GCxGC(GB14_bc, penalty = 2, lambda = 1e1)
# T. Carriage
GB24_sm <- smooth_GCxGC(GB24_bc, penalty = 2, lambda = 1e1)
GB34_sm <- smooth_GCxGC(GB34_bc, penalty = 2, lambda = 1e1)
GB14_sm <- smooth_GCxGC(GB14_bc, penalty = 2, lambda = 1e1)
plot(GB08_sm, nlevels = 100, color.palette = colorRamps::matlab.like2 )
plot_GCxGC(GB08_sm, nlevels = 100, color.palette = colorRamps::matlab.like2 )
plot_GCxGC(GB08_bc, nlevels = 100, color.palette = colorRamps::matlab.like2 )
plot_GCxGC(GB08, nlevels = 100, color.palette = colorRamps::matlab.like2 )
plot_GCxGC(GB08, nlevels = 150, color.palette = colorRamps::matlab.like2 )
plot_GCxGC(GB08_bc, nlevels = 150, color.palette = colorRamps::matlab.like2 )
plot_GCxGC(GB08_sm, nlevels = 150, color.palette = colorRamps::matlab.like2 )
plot_GCxGC(GB08_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB09_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB14_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB14, nlevels = 150, color.palette = colorRamps::matlab.like )
#### Alignment ####
## Control
# Reference GB08
GB09_al <- TwoDCOW(GB09_sm, GB08_sm, segments = c(10, 20), c(5, 10))
plot_GCxGC(GB09_al, nlevels = 150, color.palette = colorRamps::matlab.like )
#### Alignment ####
## Control
# Reference GB08
GB09_al <- TwoDCOW(GB09_sm, GB08_sm, segments = c(10, 40), max_warp = c(1, 8))
plot_GCxGC(GB09_al, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB09_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB08_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
#### Alignment ####
## Control
# Reference GB08
GB09_al <- TwoDCOW(GB09_sm, GB08_sm, segments = c(20, 40), max_warp = c(1, 8))
plot_GCxGC(GB09_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB09_al, nlevels = 150, color.palette = colorRamps::matlab.like )
GB09_al <- TwoDCOW(GB09_sm, GB08_sm, segments = c(10, 40), max_warp = c(2, 8))
plot_GCxGC(GB09_al, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB09_al, nlevels = 150, color.palette = colorRamps::matlab.like )
title("Aligned")
plot_GCxGC(GB09_sm,main = "Sample", nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB08_sm,main = "Reference", nlevels = 150, color.palette = colorRamps::matlab.like )
GB14_al <- TwoDCOW(GB14_sm, GB08_sm, segments = c(10, 40), max_warp = c(2, 8))
plot_GCxGC(GB24_sm,main = "Reference", nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB24_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB29_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
GB29_sm <- smooth_GCxGC(GB29_bc, penalty = 2, lambda = 1e1)
plot_GCxGC(GB29_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB34_sm, nlevels = 150, color.palette = colorRamps::matlab.like )
plot_GCxGC(GB24_sm, nlevels = 150, color.palette = colorRamps::matlab.like , main = '24')
plot_GCxGC(GB29_sm, nlevels = 150, color.palette = colorRamps::matlab.like , main = '29')
plot_GCxGC(GB34_sm, nlevels = 150, color.palette = colorRamps::matlab.like , main = '3')
## T. carrage
# Reference> GB34
GB24_al <- TwoDCOW(GB24_sm, GB34_sm, segments = c(10, 40), max_warp = c(2, 8))
GB29_al <- TwoDCOW(GB29_sm, GB34_sm, segments = c(10, 40), max_warp = c(2, 8))
# Metadata
metadata <- data.frame(Names = c("08GB", "09GB", "14GB", "29GB", "34GB", "24GB"), stringsAsFactors = F)
metadata$Type = factor(c(rep("S. typhy Carriege", 3), rep("Control", 3)))
metadata
devtools::load_all(".")
MTBLS579 <- join_chromatograms(GB08_sm, GB09_al, GB14 = GB14_al,
groups = metadata,
GB34 = GB34_sm, GB24 = GB24_al,
GB29 = GB29_al)
devtools::load_all(".")
devtools::load_all(".")
MTBLS579 <- join_chromatograms(GB08_sm, GB09_al, GB14 = GB14_al,
groups = metadata,
GB34 = GB34_sm, GB24 = GB24_al,
GB29 = GB29_al)
MTBLS579@groups
names(MTBLS579@chromatograms) <- c("08GB", "09GB", "14GB",
"34GB", "GB24", "GB24")
MTBLS579@groups <- metadata
names(MTBLS579@chromatograms) <- c("08GB", "09GB", "14GB",
"34GB", "24GB", "29GB")
MTBLS579@groups
# Export Data
devtools::use_data(MTBLS579, pkg = "RGCxGC", internal = TRUE)
# Export Data
devtools::use_data(MTBLS579, internal = TRUE)
# Export Data
usethis::use_data(MTBLS579, internal = TRUE)
# Export Data
usethis::use_data(MTBLS579, internal = TRUE, overwrite = T)
load("~/Dropbox/RGCxGC/R/sysdata.rda")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::document()
devtools::document()
?person
sessionInfo()
devtools::run_examples()
devtools::document()
devtools::document()
devtools::run_examples()
devtools::run_examples()
library(Rdpack)
sessionInfo()
devtools::load_all(".")
?baseline_corr
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
library(RGCxGC)
devtools::build_vignettes()
devtools::build_vignettes()
