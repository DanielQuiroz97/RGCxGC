tmp@mod_time
devtools::load_all(".")
devtools::load_all(".")
tmp <- read_chrom(GB_12, 5, x_cut = c(8, 49), y_cut = c(1.3, 5))
plot(tmp)
devtools::load_all(".")
tmp <- read_chrom(GB_12, 5, x_cut = c(8, 49), y_cut = c(1.3, 5))
plot(tmp)
devtools::load_all(".")
tmp <- read_chrom(GB_12, 5, x_cut = c(8, 49), y_cut = c(1.3, 5))
plot(tmp)
par(fg = NA)
plot(tmp)
par(fg = 1)
plot(tmp)
par(fg = 0.5)
plot(tmp)
?filled.contour
plot(tmp, key.title = 'TIC')
plot(tmp)
dev.off()
plot(tmp)
plot(tmp, key.title = 'ABC')
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
chrom_name <-  system.file("extdata", "08GB.cdf", package = "RGCxGC")
chrom_2D <- read_chrom(chrom_name, 5L)
plot(chrom_2D, nlevels = 150, color.palette = matlab.like)
devtools::load_all(".")
plot(chrom_2D, nlevels = 150, color.palette = matlab.like)
plot(chrom_2D, type = "c")
contour(t(chrom_2D@chromatogram))
contour(t(chrom_2D@chromatogram))
axis(1, 1:4, LETTERS[1:4])
contour(t(chrom_2D@chromatogram))
devtools::load_all(".")
contour(t(chrom_2D@chromatogram))
plot(chrom_2D, type = "c")
contour(t(chrom_2D@chromatogram))
contour(t(chrom_2D@chromatogram), axes = F, frame.plot = T)
devtools::load_all(".")
plot(chrom_2D, type = "c")
?contour
plot(chrom_2D, type = "c", nlevels = 150)
plot(chrom_2D, type = "c", nlevels = 10)
plot(chrom_2D, type = "c", nlevels = 5)
plot(chrom_2D, type = "c", nlevels = 10)
devtools::load_all(".")
plot(chrom_2D, type = "c", nlevels = 10)
plot(chrom_2D, type = "c", nlevels = 10, col = matlab.like(25))
plot(chrom_2D, type = "c", nlevels = 10, col = colorRamps::matlab.like(25))
plot(chrom_2D, type = "c", nlevels = 10, col = colorRamps::matlab.like(25), nlevels = 50)
contour(t(chrom_2D@chromatogram), nlevels = 100, col = colorRamps::matlab.like2(20))
contour(t(chrom_2D@chromatogram), nlevels = 200, col = colorRamps::matlab.like2(20))
contour(t(chrom_2D@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(20))
tmp <- baseline_corr(chrom_2D, lambda = 1e3)
contour(t(tmp@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(20))
contour(t(tmp@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(50))
contour(t(tmp@chromatogram), nlevels = 100, col = colorRamps::matlab.like2(50))
dev.off()
contour(t(tmp@chromatogram), nlevels = 100, col = colorRamps::matlab.like2(50))
contour(t(tmp@chromatogram), nlevels = 100, col = colorRamps::matlab.like2(100))
contour(t(tmp@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(100))
contour(t(tmp@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(50))
contour(t(tmp@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(45))
contour(t(tmp@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(50))
tmp <- baseline_corr(chrom_2D, lambda = 1e5)
contour(t(tmp@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(50))
tmp <- baseline_corr(chrom_2D, lambda = 1e1)
contour(t(tmp@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(50))
tmp2 <- wsmooth(tmp, lambda = 1e1)
contour(t(tmp2@chromatogram), nlevels = 50, col = colorRamps::matlab.like2(50))
plot(chrom_2D, type = "c", nlevels = 50, col = colorRamps::matlab.like2(50))
library(colorRamps)
library(colorRamps)
devtools::load_all(".")
devtools::load_all(".")
plot(chrom_2D, type = "c", nlevels = 50, col = colorRamps::matlab.like2(50))
plot(chrom_2D, type = "c", nlevels = 100, col = colorRamps::matlab.like2(50))
plot(chrom_2D, type = "c", nlevels = 100, col = colorRamps::matlab.like2(25))
plot(chrom_2D, type = "c", nlevels = 100, col = colorRamps::matlab.like2(30))
plot(chrom_2D, type = "c", nlevels = 100, col = colorRamps::matlab.like2(30))
RGCxGC::matlab.like(30)
plot(RGCxGC::matlab.like(30))
?colorRamps::matlab.like
matrix(1:30, nrow = 6, byrow = T)
image(matrix(1:30, nrow = 6, byrow = T), colorRamps::matlab.like2(30))
image(matrix(1:30, nrow = 6, byrow = T), col = colorRamps::matlab.like2(30))
image(t(matrix(1:30, nrow = 6, byrow = T)), col = colorRamps::matlab.like2(30))
t(matrix(1:30, nrow = 6, byrow = T))
image(t(matrix(1:30, nrow = 6, byrow = T)), col = rev(colorRamps::matlab.like2(30)))
plot(chrom_2D, type = "c", nlevels = 100, col = rev(colorRamps::matlab.like2(30)))
image(t(matrix(1:30, nrow = 6, byrow = T)), col = rev(colorRamps::matlab.like2(30)))
plot(chrom_2D, type = "c", nlevels = 100, col = colorRamps::matlab.like2(30))
image(t(matrix(1:30, nrow = 6, byrow = T)), col = rev(colorRamps::matlab.like2(30)))
plot(tmp2, col = colorRamps::matlab.like2(30))
plot(tmp2, col = colorRamps::matlab.like2(30), nlevels = 100)
plot(tmp2, col = colorRamps::matlab.like2(30), nlevels = 500)
plot(tmp2, col = colorRamps::matlab.like2(30), nlevels = 50)
col_fun <- colorRampPalette(c('blue', 'cyan', 'green', 'yellow', 'red', 'red'))
col_fun(10)
plot(tmp2, col = col_fun(30), nlevels = 50)
filled.contour(t(tmp2@chromatogram), col = col_fun(30), nlevels = 50)
devtools::load_all(".")
?filled.contour
plot(tmp2, col = col_fun(30), nlevels = 50, key.title = "TIC")
filled.contour(t(tmp2@chromatogram), col = col_fun(30), nlevels = 50, key.title = 'TIC')
filled.contour(t(tmp2@chromatogram), col = col_fun(30), nlevels = 50, key.title = title(main = "TIC"))
filled.contour(t(tmp2@chromatogram), col = col_fun(30), nlevels = 30, key.title = title(main = "TIC"))
dev.off()
filled.contour(t(tmp2@chromatogram), col = col_fun(30), nlevels = 30, key.title = title(main = "TIC"))
filled.contour(t(tmp2@chromatogram), col = col_fun(15), nlevels = 30, key.title = title(main = "TIC"))
?plot.axes
dev.off()
devtools::load_all(".")
?contour
devtools::load_all(".")
chrom_name <-  system.file("extdata", "08GB.cdf", package = "RGCxGC")
chrom_2D <- read_chrom(chrom_name, 5L)
plot(chrom_2D, nlevels = 150, color.palette = matlab.like)
plot(chrom_2D, type = "c", nlevels = 50, col = matlab.like(30))
devtools::load_all(".")
plot(chrom_2D, type = "c", nlevels = 50, col = matlab.like(30))
devtools::load_all(".")
plot(chrom_2D, type = "c", nlevels = 50, col = matlab.like(30))
devtools::load_all(".")
plot(chrom_2D, type = "c", nlevels = 50, col = matlab.like(30))
devtools::load_all(".")
plot(chrom_2D, type = "c", nlevels = 50, col = matlab.like(30))
devtools::load_all(".")
GB08_fl <- system.file("extdata", "08GB.cdf", package = "RGCxGC")
GB08 <- read_chrom(GB08_fl, 5L)
devtools::load_all(".")
GB08 <- read_chrom(GB08_fl, 5L)
GB08 <- read_chrom(GB08_fl, 5L, verbose = F)
devtools::load_all(".")
GB08 <- read_chrom(GB08_fl, 5L, verbose = F)
devtools::load_all(".")
GB08 <- read_chrom(GB08_fl, 5L, verbose = F)
GB08 <- read_chrom(GB08_fl, 5L, verbose = T)
tmp <- matrix(1:30, nrow = 6, byrow = T)
tmp
apply(tmp, 2, sum)
apply(tmp, 2, function(x) x + 1)
setwd("~/Daniel/RGCxGC")
raw_1d_chrom <- RNetCDF::open.nc('malt8CP1271_R1.CDF')
scan_time <- RNetCDF::var.get.nc(raw_1d_chrom,
"scan_acquisition_time")
scan_first <- scan_time[ seq(length(scan_time) * 0.1) ]
scan_first
scan_floor <- floor(scan_first / 60)
scan_floor
scan_first / 60
plot(diff(scan_first / 60), type = "l")
graphics::plot(diff(scan_first / 60), type = "l")
graphics::plot(diff(scan_first / 60)*1000, type = "l")
graphics::plot(diff(scan_first / 60)*10000, type = "l")
scan_time
diff(scan_time)
unique(diff(scan_time))
diff(scan_time[1:1000])
graphics::plot(diff(scan_time[1:1000]))
graphics::plot(diff(scan_time[1:100]))
devtools::load_all(".")
tmp <- read_chrom('malt8CP1271_R1.CDF', mod_time = 6)
?RGCxGC::plot
plot(TMP, type = "c", nlevels = 50, col = matlab.like(30))
plot(tmp, type = "c", nlevels = 50, col = matlab.like(30))
tmp <- read_chrom('malt8CP1271_R1.CDF', mod_time = 6, sam_rate = 33.3)
plot(tmp, type = "c", nlevels = 50, col = matlab.like(30))
plot(tmp, type = "c", nlevels = 50, col = matlab.like(30))
scan_floor <- floor(scan_first / 60)
scan_minut <- table(scan_floor)
scan_minut <- scan_minut[-c(1, length(scan_minut))]
homogeneous <- all(scan_minut[1] == scan_minut)
homogeneous
scan_minut[1]
scan_minut
plot(tmp, type = "c", nlevels = 250, col = matlab.like(30))
plot(tmp, type = "c", nlevels = 150, col = matlab.like(30))
tmp <- read_chrom('malt8CP1271_R1.CDF', mod_time = 6, sam_rate = 33.3, x_cut = c(5, 62),y_cut = c(0, 3))
plot(tmp, type = "c", nlevels = 150, col = matlab.like(30))
plot(tmp, type = "c", nlevels = 100, col = matlab.like(30))
plot(tmp, type = "c", nlevels = 125, col = matlab.like(30))
dev.off()
plot(tmp, type = "c", nlevels = 150, col = matlab.like(30))
dev.off()
plot(tmp, type = "c", nlevels = 110, col = matlab.like(30))
dev.off()
plot(tmp, type = "c", nlevels = 130, col = matlab.like(30))
dev.off()
plot(tmp, type = "c", nlevels = 140, col = matlab.like(30))
dev.off()
plot(tmp, type = "c", nlevels = 145, col = matlab.like(30))
dev.off()
plot(tmp, type = "c", nlevels = 150, col = matlab.like(30))
dev.off()
plot(tmp, type = "c", nlevels = 140, col = matlab.like(30))
scan_first / 60
plot(tmp, type = "c", nlevels = 200, col = matlab.like(30))
plot(tmp,  nlevels = 200, col = matlab.like)
plot(tmp,  nlevels = 200, color.palette = matlab.like)
plot(tmp,  nlevels = 100, color.palette = matlab.like)
plot(tmp, color.palette = matlab.like)
plot(tmp, type = "c", nlevels = 140, col = matlab.like(30))
devtools::load_all(".")
GB08_fl <- system.file("extdata", "08GB.cdf", package = "RGCxGC")
GB08 <- read_chrom(GB08_fl, 5L)
plot(GB08, nlevels = 150, color.palette = matlab.like,
#'       main = "No dephased chromatogram")
main = "No dephased chromatogram")
GB08_d25 <- dephase_chrom(GB08, 25)
devtools::load_all(".")
GB08_d25 <- dephase_chrom(GB08, 25)
plot(GB08_d25, nlevels = 150, color.palette = matlab.like,
main = "25% dephased chromatogram")
devtools::load_all(".")
GB08_d25 <- dephase_chrom(GB08, 25)
plot(GB08_d25, nlevels = 150, color.palette = matlab.like,
main = "25% dephased chromatogram")
plot(GB08, nlevels = 150, color.palette = matlab.like,
main = "No dephased chromatogram")
plot(GB08_d25, nlevels = 150, color.palette = matlab.like,
main = "25% dephased chromatogram")
devtools::test()
devtools::test()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?dephase_chrom
?RGCxGC::dephase_chrom
devtools::load_all(".")
load("~/Daniel/RGCxGC/Preprocessing.RData")
names(low)
devtools::load_all(".")
tmp <- base_batch_2DCOW(reference = kd1_1_smth, low, c(20, 30), c(4, 10))
names(tmp)
names(low_act@Batch_2DCOW)[1] <- "kd1_1"
names(tmp)
names(low_act@Batch_2DCOW)[1]
names(tmp)
names(low_act@Batch_2DCOW)
names(low_act@Batch_2DCOW)
is(list(), "list")
devtools::load_all(".")
tmp <- unfold_chrom(high_act)
names(tmp$chromatogram)
dim(tmp$chromatogram)
names(high_act@Batch_2DCOW)
names(low_act@Batch_2DCOW)
tmp <- unfold_chrom(low_act)
dim(tmp$chromatogram)
names(tmp$chromatogram)
tmp <- base_unfold(low_act)
tmp <- base_unfold(low_act@Batch_2DCOW)
rownames(tmp)
raw_signal <- sapply(low_act@Batch_2DCOW,
function(x) as.vector(t(x)) )
raw_signal <-  t(raw_signal)
dim(raw_signal)
names(raw_signal)
rownames(raw_signal) <- names(low_act@Batch_2DCOW)
rownames(raw_signal) <- names(x)
rownames(raw_signal)
raw_signal
View(raw_signal)
raw_signal[, 1:10]
load("~/Daniel/RGCxGC/data/MTBLS579.rda")
MTBLS579_mpca <- m_prcomp(MTBLS579)
plot_loading(MTBLS579_mpca, type = "n", pc = 1,
color.palette = matlab.like)
load("~/Daniel/RGCxGC/MPCA.RData")
plot_loading(M579_mpca, type = "n", pc = 1)
colfunc<-colorRampPalette(rev(c("red","yellow","springgreen","royalblue)))
)
""
""
colfunc<-colorRampPalette(rev(c("red","yellow","springgreen","royalblue")))
plot_loading(M579_mpca, type = "n", pc = 1, color.palette = colfunc )
colfunc<-colorRampPalette(c("red","yellow","springgreen","royalblue"))
plot_loading(M579_mpca, type = "n", pc = 1, color.palette = colfunc )
devtools::load_all(".")
plot_loading(M579_mpca, type = "n", pc = 1, color.palette = colfunc )
plot_loading(M579_mpca, type = "n", pc = 1, color.palette = colfunc, thresh = -0.004)
plot_loading(M579_mpca, type = "n", pc = 1, color.palette = colfunc, thresh = -0.0035)
plot_loading(M579_mpca, type = "n", pc = 1, color.palette = colfunc, thresh = -0.0033)
plot_loading(M579_mpca, type = "n", pc = 2, color.palette = colfunc, thresh = -0.0033)
plot_loading(M579_mpca, type = "n", pc = 2, color.palette = colfunc, thresh = -0.002)
dev.off()
plot_loading(M579_mpca, type = "n", pc = 2, color.palette = colfunc, thresh = -0.0025)
load("~/Daniel/RGCxGC/MPCA.RData")
1/25
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
GB08_fl <- system.file("extdata", "08GB.cdf", package = "RGCxGC")
GB08 <- read_chrom(GB08_fl, 5L)
devtools::load_all(".")
GB08 <- read_chrom(GB08_fl, 5L)
devtools::load_all(".")
GB08 <- read_chrom(GB08_fl, 5L)
devtools::load_all(".")
load("~/Daniel_Thesis/MTBLS579/PLSDA_OK.RData")
plotIndiv(final_splsda)
# Add needed libraries
library(tidyverse) # Easily Install and Load the 'Tidyverse'
library(RGCxGC) # GCxGC chemometrics
library(colorRamps) # Builds color tables
library(ggsci) # Scientific Journal and Sci-Fi Themed Color Palettes for
library(mixOmics) # PLS-DA omics
colfunc <- colorRampPalette(c("red", "yellow", "springgreen", "royalblue", "royalblue"))
#### Mix Omics ####
list_chrom <- unfold_chrom(all_chrom)
unfolded_chrom <- list_chrom$chromatogram
plotIndiv(final_splsda)
# Loadings
lds <- tune_plsda$loadings$X
ld1 <- lds[, 1]
LD1 <- t(matrix(ld1, nrow = 500, ncol = 709, byrow = T))
LD1[LD1 > 0] <- 0
LD1[LD1 >  -0.0105] <- 0
plot(GB_01,type = "c")
filled.contour(LD1, color.palette = colfunc, nlevels = 50)
30*(0.0025^2)*pi
30*(0.0025^2)*pi*1
graphics::plot(perf.splsda)
auroc(srbct_plsda)
auroc(final_splsda)
# Loadings
lds <- tune_plsda$loadings$X
ld1 <- lds[, 1]
LD1 <- t(matrix(ld1, nrow = 500, ncol = 709, byrow = T))
filled.contour(LD1, color.palette = colfunc, nlevels = 50)
30*(0.0025^2)*pi
30*(0.0025^2)*pi/0.96
30*(0.025^2)*pi/0.96
load("~/Daniel_Thesis/Fabio Augusto/PLSDA.RData")
# Unfold chromatogram into single
list_chrom <- unfold_chrom(all_chrom)
unfolded_chrom <- list_chrom$chromatogram
colnames(unfolded_chrom) <- paste0("RT", seq(dim(unfolded_chrom)[2]) )
Index_chrom <- tibble(Names = rownames(unfolded_chrom))
all_index <- left_join(Index_chrom, metadata, by = "Names") %>%
mutate(Index =  seq(n()))
Y <- factor(all_index$Activity)
srbct_plsda <- plsda(unfolded_chrom, Y, ncomp = 4, near.zero.var = T)
background <- background.predict(srbct_plsda, comp.predicted = 2,
dist = "max.dist")
plotIndiv(srbct_plsda, comp = 1:2,
group = Y, ind.names = FALSE,
legend = TRUE,  background = background)
perf_plsda <- perf(srbct_plsda, validation = "Mfold", folds = 6,cpus = 12,
progressBar = T, auc = T, nrepeat = 10)
dim(unfolded_chrom)
# Add needed libraries
library(tidyverse) # Easily Install and Load the 'Tidyverse'
library(RGCxGC) # GCxGC chemometrics
library(colorRamps) # Builds color tables
library(ggsci) # Scientific Journal and Sci-Fi Themed Color Palettes for
library(mixOmics) # PLS-DA omics
colfunc <- colorRampPalette(c("red", "yellow", "springgreen", "royalblue", "royalblue"))
#### Mix Omics ####
list_chrom <- unfold_chrom(all_chrom)
unfolded_chrom <- list_chrom$chromatogram
colnames(unfolded_chrom) <- paste0("RT", seq(dim(unfolded_chrom)[2]))
Index_chrom <- tibble(Names = rownames(unfolded_chrom))
all_index <- left_join(Index_chrom, metadata, by = "Names") %>%
mutate(Index =  seq(n()), Activity = factor(Activity) )
Y <- all_index$Activity
srbct_plsda <- plsda(unfolded_chrom, Y, ncomp = 2)
background <- background.predict(srbct_plsda, comp.predicted=2,
dist = "max.dist")
plotIndiv(srbct_plsda, comp = 1:2,
group = Y, ind.names = FALSE,
legend = TRUE,  background = background)
chrom_dim <- ncol(unfolded_chrom)
test.keepX <- list.keepX <- seq(chrom_dim/3, chrom_dim, 6000)
perf_plsda <- perf(srbct_plsda, validation = "Mfold", folds = 5,
progressBar = T, auc = T, nrepeat = 10, cpus = 12)
tune_plsda <- tune.splsda(unfolded_chrom, Y, ncomp = 2, validation = 'Mfold', folds = 5,
progressBar = T, dist = 'max.dist',cpus = 12,
test.keepX = list.keepX, nrepeat = 10)
tune_plsda$choice.ncomp$ncomp
tune_plsda$choice.keepX
nvol
ncol
dim(unfolded_chrom)
tune_plsda$choice.ncomp
tune_plsda$choice.keepX
tune_plsda$choice.keepX
dim(unfolded_chrom)
36400/55200
final_splsda <- splsda(unfolded_chrom, Y, ncomp = 2)
final_splsda <- splsda(unfolded_chrom, Y, ncomp = 2)
final_splsda2 <- splsda(unfolded_chrom, Y, ncomp = 2, keepX = test_keepX)
test_keepX <- tune_plsda$choice.keepX
final_splsda2 <- splsda(unfolded_chrom, Y, ncomp = 2, keepX = test_keepX)
perf.splsda <- perf(final_splsda, validation = "Mfold", folds = 5,cpus = 12,
progressBar = T, auc = TRUE, nrepeat = 10)
plotIndiv(final_splsda)
auroc(perf.splsda)
auroc(final_splsda)
auroc(final_splsda2)
# Loadings
lds <- srbct_plsda$loadings$X
ld1 <- lds[, 1]
LD1 <- t(matrix(ld1, nrow = 150, ncol = 368, byrow = T))
LD1[LD1 > 0] <- 0
LD1[LD1 >  -0.0105] <- 0
plot(GB_01,type = "c")
plot(LD1,type = "c")
filled.contour(LD1, color.palette = colfunc, nlevels = 50)
# Loadings
lds <- srbct_plsda$loadings$X
ld1 <- lds[, 1]
LD1 <- t(matrix(ld1, nrow = 150, ncol = 368, byrow = T))
filled.contour(LD1, color.palette = colfunc, nlevels = 50)
dim(ld1)
length(ld1)
150*368
dim(unfolded_chrom)
plotIndiv(final_splsda2)
# Loadings
lds <- srbct_plsda2$loadings$X
# Loadings
lds <- final_splsda$loadings$X
dim(lds)
hist(lds[,1])
hist(lds[,2])
hist(lds[,1])
# Loadings
lds <- final_splsda2$loadings$X
hist(lds[,1])
hist(lds[,2])
dim(lds)
# Loadings
lds <- final_splsda2$loadings$X
ld1 <- lds[, 1]
LD1 <- t(matrix(ld1, nrow = 150, ncol = 368, byrow = T))
filled.contour(LD1, color.palette = colfunc, nlevels = 50)
# Loadings
lds <- final_splsda2$loadings$X
ld1 <- lds[, 1]
LD1 <- t(matrix(ld1, nrow = 150, ncol = 368, byrow = T))
LD1[LD1 >  -0.005] <- 0
#plot(LD1,type = "c")
filled.contour(LD1, color.palette = colfunc, nlevels = 50)
LD1[LD1 >  -0.006] <- 0
#plot(LD1,type = "c")
filled.contour(LD1, color.palette = colfunc, nlevels = 50)
LD1[LD1 >  -0.008] <- 0
#plot(LD1,type = "c")
filled.contour(LD1, color.palette = colfunc, nlevels = 50)
# Loadings
lds <- final_splsda2$loadings$X
ld1 <- lds[, 1]
LD1 <- t(matrix(ld1, nrow = 150, ncol = 368, byrow = T))
LD1[LD1 >  -0.0075] <- 0
#plot(LD1,type = "c")
filled.contour(LD1, color.palette = colfunc, nlevels = 50)
auroc(final_splsda2)
hist(lds[,2])
# Loadings 2PC
lds <- final_splsda2$loadings$X
ld1 <- lds[, 2]
# Loadings 2PC
lds <- final_splsda2$loadings$X
ld2 <- lds[, 2]
LD2 <- t(matrix(ld1, nrow = 150, ncol = 368, byrow = T))
LD2[LD2 >  -0.02] <- 0
#plot(LD1,type = "c")
filled.contour(LD2, color.palette = colfunc, nlevels = 50)
# Loadings 2PC
lds <- final_splsda2$loadings$X
ld2 <- lds[, 2]
LD2 <- t(matrix(ld1, nrow = 150, ncol = 368, byrow = T))
LD2[LD2 >  -0.015] <- 0
#plot(LD1,type = "c")
filled.contour(LD2, color.palette = colfunc, nlevels = 50)
# Loadings 2PC
lds <- final_splsda2$loadings$X
ld2 <- lds[, 2]
LD2 <- t(matrix(ld1, nrow = 150, ncol = 368, byrow = T))
LD2[LD2 >  -0.0125] <- 0
#plot(LD1,type = "c")
filled.contour(LD2, color.palette = colfunc, nlevels = 50)
# Loadings 2PC
lds <- final_splsda2$loadings$X
ld2 <- lds[, 2]
LD2 <- t(matrix(ld1, nrow = 150, ncol = 368, byrow = T))
LD2[LD2 >  -0.015] <- 0
#plot(LD1,type = "c")
filled.contour(LD2, color.palette = colfunc, nlevels = 50)
colfunc <- colorRampPalette(c("red", "yellow", "springgreen", "white"))
#plot(LD1,type = "c")
filled.contour(LD2, color.palette = colfunc, nlevels = 50)
colfunc <- colorRampPalette(c("red", "yellow", "springgreen", "royalblue""))
""
colfunc <- colorRampPalette(c("red", "yellow", "springgreen", "royalblue"))
#plot(LD1,type = "c")
filled.contour(LD2, color.palette = colfunc, nlevels = 50)
plotIndiv(final_splsda2)
dim(unfolded_chrom)
tune_plsda$choice.keepX
tune_plsda$choice.keepX/55200
10552
714/10552
12*60
